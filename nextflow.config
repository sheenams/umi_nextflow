manifest {
    homePage = 'https://gitlab.labmed.uw.edu/genetics/umi_nextflow'
    description = 'UMI pipeline written in nextflow.'
    version = '0.1'
    name = 'umi-nextflow'
}

profiles {
  uw_batch {
    params {
      input_folder = null
      run_id = null
      output = 's3://uwlm-personal/nkrumm/umi/out/'
      // options
      downsample_reads = null
      save_intermediate_output = false
      // reference files
      picard_targets = 's3://uwlm-ngs-refs/human/MONCv1/MONC_estimated_targets.nochr.interval_list'
      picard_baits = 's3://uwlm-ngs-refs/human/MONCv1/MONC_ctDNA1.3_designed_probe_coords_180314_no_chr.probes.interval_list'
      bed_baits = 's3://uwlm-ngs-refs/human/MONCv1/MONC_ctDNA1.3_designed_probe_coords_180314_no_chr.bed'
      bed_targets = 's3://uwlm-ngs-refs/human/MONCv1/MONC_estimated_targets.nochr.bed'
      ref_fasta = 's3://uwlm-ngs-refs/human/hg19/gatk-reference-genome-01202015/human_g1k_v37.fasta'
      ref_index = 's3://uwlm-ngs-refs/human/hg19/gatk-reference-genome-01202015/human_g1k_v37.fasta.{amb,ann,bwt,pac,sa,dict,fai}'
      // These are specially formatted to work in umi-varcal. 
      ref_fasta_chr = 's3://uwlm-ngs-refs/human/MONCv1/human_g1k_v37.fasta'
      ref_index_chr = 's3://uwlm-ngs-refs/human/MONCv1/human_g1k_v37.fasta.{amb,ann,bwt,pac,sa,dict,fai}'
      bed_targets_chr = 's3://uwlm-ngs-refs/human/MONCv1/MONC_ctDNA1.3_designed_probe_coords_180314_chr.bed'
    }
    workDir = 's3://uwlm-nextflow-data/workdir/umi-nextflow'
    process {
      scratch = '/docker_scratch'
      queue = 'ngs-queue'
      executor = 'awsbatch'

      withLabel:bwa {
        container = 'sheenamt/alignment:v1.0'
        cpus = 30
        memory = '60GB'
      }
      withLabel:fgbio{
        container = 'quay.io/biocontainers/fgbio:1.1.0--0'
        memory = '12GB'
      }
      withLabel:sambamba{
        container = 'quay.io/biocontainers/sambamba:0.7.1--h148d290_2'
        cpus = 8
        memory = '12GB'
      }
      withLabel:picard{
        container = 'quay.io/biocontainers/picard:2.22.1--0'
        memory = '32GB'
      }
      withLabel:fastqc{
        container = 'quay.io/biocontainers/fastqc:0.11.8--1'
        cpus = 2
        memory = '8GB'
      }
      withLabel:mosdepth{
        container = 'quay.io/biocontainers/mosdepth:0.2.9--hbeb723e_0'
        cpus = 4 // per docs, no benefit after 4 threads
        memory '4GB'
      }
      withLabel:multiqc{
        container = 'sheenamt/multiqc-pandas:v1.0'
        cpus = 4
        memory = '4GB'
      }
      withLabel:umivarcal{
        container = 'sheenamt/umi-varcal:v1.0'
      }
      withLabel:bcftools{
        container = 'quay.io/biocontainers/bcftools:1.10.2--hd2cd319_0'
      }
      withLabel:vardict{
        container = 'quay.io/biocontainers/vardict-java:1.7.0--0'
      }
      withLabel:pileup{
        container = 'sheenamt/alignment:v1.0'
        cpus = 2
        memory = '8GB'
      }
      // withLabel:varscan{
      //   container = 'quay.io/biocontainers/varcsan:2.3.7--3'
      //   memory = '8GB'
      // }
    }
    aws {
      region = 'us-west-2'
      batch {
        volumes = '/docker_scratch'
        cliPath = '/home/ec2-user/miniconda/bin/aws'
      }
    }
  }

  local {
    report.enabeled = true
    trace.enabeled = true
    timeline.enabled = true
    dag {
      enabeled = true
      file = 'dag.html'
    }
    params {
      // Input folder needs trailing slash
      input_folder = null
      run_id = null
      input_source = 'flat_folder'
      output = 'output'
      // options
      downsample_reads = null
      save_intermediate_output = false
      // reference files
      picard_targets = '/mnt/disk10/users/sheenams/MONCv1_s3/MONC_estimated_targets.nochr.interval_list'
      picard_baits = '/mnt/disk10/users/sheenams/MONCv1_s3/MONC_ctDNA1.3_designed_probe_coords_180314_no_chr.probes.interval_list'
      ref_fasta = '/mnt/disk2/com/Genomes/gatk-bundle/human_g1k_v37.fasta'
      ref_index = '/mnt/disk2/com/Genomes/gatk-bundle/human_g1k_v37.fasta.{amb,ann,bwt,pac,sa,dict,fai}'
      bed_baits = '/mnt/disk10/users/sheenams/MONCv1_s3/MONC_ctDNA1.3_designed_probe_coords_180314_no_chr.bed'
      bed_targets = '/mnt/disk10/users/sheenams/MONCv1_s3/MONC_estimated_targets.nochr.bed'
      // These are specially formatted to work in umi-varcal. 
      bed_targets_chr = '/mnt/disk10/users/sheenams/MONCv1_s3/MONC_ctDNA1.3_designed_probe_coords_180314_chr.bed'
      ref_fasta_chr = '/mnt/disk10/users/sheenams/MONCv1_s3/human_g1k_v37.fasta'
      ref_index_chr = '/mnt/disk10/users/sheenams/MONCv1_s3/human_g1k_v37.fasta.{amb,ann,bwt,pac,sa,dict,fai}'
    }
    
    executor {
      name = 'local'
      cpus = 48
      memory = '192GB'
    }

    process {

      errorStrategy = 'ignore'  // continues pipeline even when one process errors out; similar to -k flag in scons
  
      withLabel:bwa {
        container = 'sheenamt/alignment:v1.0'
        cpus = 8
        memory = '16GB'
      }
      withLabel:fgbio{
        container = 'quay.io/biocontainers/fgbio:1.1.0--0'
        memory = '12GB'
      }
      withLabel:sambamba{
        container = 'quay.io/biocontainers/sambamba:0.7.1--h148d290_2'
        cpus = 8
        memory = '8GB'
      }
      withLabel:picard{
        container = 'quay.io/biocontainers/picard:2.22.1--0'
        memory = '16GB'
      }
      withLabel:fastqc{
        container = 'quay.io/biocontainers/fastqc:0.11.8--1'
        memory = '4GB'
      }
      withLabel:mosdepth{
        container = 'quay.io/biocontainers/mosdepth:0.2.9--hbeb723e_0'
        cpus = 4 // per docs, no benefit after 4 threads
        memory = '4GB'
      }
      withLabel:multiqc{
        container = 'sheenamt/multiqc-pandas:v1.0'
        memory = '4GB'
      }
      withLabel:umivarcal{
        container = 'sheenamt/umi-varcal:v1.0'
        cpus = 4
        memory = '8GB'
      }
      withLabel:bcftools{
        container = 'quay.io/biocontainers/bcftools:1.10.2--hd2cd319_0'
      }
      withLabel:vardict{
        container = 'quay.io/biocontainers/vardict-java:1.7.0--0'
        memory = '2GB'
      }
      withLabel:pileup{
        container = 'sheenamt/alignment:v1.0'
        cpus = 2
        memory = '4GB'
      }
      withLabel:plotting{
        container = 'sheenamt/multiqc-pandas:v1.0'
        memory = '4GB'
      }
      withLabel:smc2{
        container = 'sheenamt/smc2:v1.0'
        cpus = 8
        memory = '8GB'
      }
      // withLabel:varscan{
      //   container = 'quay.io/biocontainers/varcsan:2.3.7--3'
      //   memory = '8GB'
      // }

    }

    docker {
        enabled = true
        temp = 'auto'
    }
  }
}